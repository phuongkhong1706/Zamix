import React, { useEffect, useState } from 'react';
import {
  Chart as ChartJS,
  ArcElement,
  Tooltip,
  Legend,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  PointElement,
  LineElement,
  RadialLinearScale,
  Filler
} from 'chart.js';
import { Doughnut, Bar, Line, PolarArea, Radar } from 'react-chartjs-2';

ChartJS.register(
  ArcElement,
  Tooltip,
  Legend,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  PointElement,
  LineElement,
  RadialLinearScale,
  Filler
);

const ChartCard = ({ title, chart, insight }) => (
  <div style={{
    flex: '1 1 calc(50% - 24px)',
    margin: '12px',
    padding: '20px',
    backgroundColor: 'white',
    borderRadius: '16px',
    boxShadow: '0 8px 24px rgba(0,0,0,0.12)',
    minWidth: '320px',
    minHeight: '400px',
    display: 'flex',
    flexDirection: 'column',
    border: '1px solid #e5e7eb'
  }}>
    <h3 style={{ 
      fontSize: '18px', 
      fontWeight: '600',
      textAlign: 'center', 
      marginBottom: '16px',
      color: '#1f2937'
    }}>{title}</h3>
    <div style={{ flexGrow: 1, minHeight: '250px' }}>
      {chart}
    </div>
    {insight && (
      <div style={{
        marginTop: '16px',
        padding: '12px',
        backgroundColor: '#f8fafc',
        borderRadius: '8px',
        fontSize: '14px',
        color: '#64748b',
        borderLeft: '4px solid #3b82f6'
      }}>
        <strong style={{ color: '#1e40af' }}>Nh·∫≠n x√©t: </strong>{insight}
      </div>
    )}
  </div>
);

const StatCard = ({ title, value, subtitle, color = '#3b82f6', icon }) => (
  <div style={{
    flex: '1',
    margin: '8px',
    padding: '20px',
    backgroundColor: 'white',
    borderRadius: '12px',
    boxShadow: '0 4px 12px rgba(0,0,0,0.08)',
    textAlign: 'center',
    border: `2px solid ${color}20`
  }}>
    <div style={{ fontSize: '24px', marginBottom: '8px' }}>{icon}</div>
    <div style={{ fontSize: '24px', fontWeight: 'bold', color, marginBottom: '4px' }}>
      {value}
    </div>
    <div style={{ fontSize: '14px', fontWeight: '600', color: '#374151', marginBottom: '4px' }}>
      {title}
    </div>
    <div style={{ fontSize: '12px', color: '#6b7280' }}>
      {subtitle}
    </div>
  </div>
);

function StudentStatistic() {
  const [chartData, setChartData] = useState(null);

  useEffect(() => {
    // D·ªØ li·ªáu h·ªçc t·∫≠p th·ª±c t·∫ø qua c√°c th√°ng
    const monthlyProgress = [
      { month: 'T9/2024', score: 6.5, effort: 65, homework: 70 },
      { month: 'T10/2024', score: 7.2, effort: 75, homework: 80 },
      { month: 'T11/2024', score: 7.8, effort: 80, homework: 85 },
      { month: 'T12/2024', score: 8.1, effort: 85, homework: 90 },
      { month: 'T1/2025', score: 8.5, effort: 88, homework: 92 },
      { month: 'T2/2025', score: 8.8, effort: 90, homework: 95 }
    ];

    // Ph√¢n t√≠ch nƒÉng l·ª±c theo ch·ªß ƒë·ªÅ
    const subjectAnalysis = {
      labels: ['ƒê·∫°i s·ªë', 'H√¨nh h·ªçc', 'Gi·∫£i t√≠ch', 'X√°c su·∫•t', 'L∆∞·ª£ng gi√°c'],
      datasets: [{
        label: 'ƒêi·ªÉm s·ªë',
        data: [8.5, 7.2, 9.1, 6.8, 8.0],
        backgroundColor: 'rgba(59, 130, 246, 0.6)',
        borderColor: '#3b82f6',
        borderWidth: 2,
        fill: true
      }, {
        label: 'Trung b√¨nh l·ªõp',
        data: [7.8, 7.5, 8.2, 7.1, 7.6],
        backgroundColor: 'rgba(239, 68, 68, 0.3)',
        borderColor: '#ef4444',
        borderWidth: 2,
        fill: true
      }]
    };

    // Xu h∆∞·ªõng h·ªçc t·∫≠p
    const progressTrend = {
      labels: monthlyProgress.map(m => m.month),
      datasets: [
        {
          label: 'ƒêi·ªÉm s·ªë',
          data: monthlyProgress.map(m => m.score),
          borderColor: '#10b981',
          backgroundColor: 'rgba(16, 185, 129, 0.1)',
          tension: 0.4,
          fill: true
        },
        {
          label: 'M·ª©c ƒë·ªô n·ªó l·ª±c (%)',
          data: monthlyProgress.map(m => m.effort / 10),
          borderColor: '#f59e0b',
          backgroundColor: 'rgba(245, 158, 11, 0.1)',
          tension: 0.4,
          fill: true
        },
        {
          label: 'Ho√†n th√†nh BTVN (%)',
          data: monthlyProgress.map(m => m.homework / 10),
          borderColor: '#8b5cf6',
          backgroundColor: 'rgba(139, 92, 246, 0.1)',
          tension: 0.4,
          fill: true
        }
      ]
    };

    // Ph√¢n t√≠ch th·ªùi gian h·ªçc
    const studyTime = {
      labels: ['Th·ª© 2', 'Th·ª© 3', 'Th·ª© 4', 'Th·ª© 5', 'Th·ª© 6', 'Th·ª© 7', 'CN'],
      datasets: [{
        label: 'Gi·ªù h·ªçc (h)',
        data: [2.5, 3.0, 2.0, 3.5, 2.5, 1.5, 4.0],
        backgroundColor: [
          '#ef4444', '#f97316', '#eab308', '#22c55e', 
          '#06b6d4', '#3b82f6', '#8b5cf6'
        ]
      }]
    };

    // Hi·ªáu qu·∫£ h·ªçc t·∫≠p
    const studyEfficiency = {
      labels: ['T·∫≠p trung cao', 'T·∫≠p trung TB', 'M·∫•t t·∫≠p trung', 'Ngh·ªâ gi·∫£i lao'],
      datasets: [{
        label: 'Ph·∫ßn trƒÉm th·ªùi gian',
        data: [45, 30, 15, 10],
        backgroundColor: ['#10b981', '#f59e0b', '#ef4444', '#6b7280']
      }]
    };

    // So s√°nh v·ªõi l·ªõp
    const classComparison = {
      labels: ['ƒêi·ªÉm TB', 'Th·ª© h·∫°ng', 'Ti·∫øn b·ªô', 'BTVN'],
      datasets: [
        {
          label: 'H·ªçc sinh',
          data: [85, 15, 88, 92],
          backgroundColor: 'rgba(59, 130, 246, 0.8)'
        },
        {
          label: 'TB L·ªõp',
          data: [78, 50, 65, 75],
          backgroundColor: 'rgba(156, 163, 175, 0.8)'
        }
      ]
    };

    // M·ª•c ti√™u v√† th√†nh t√≠ch
    const achievements = {
      labels: ['ƒê√£ ƒë·∫°t', 'Ch∆∞a ƒë·∫°t'],
      datasets: [{
        data: [75, 25],
        backgroundColor: ['#10b981', '#e5e7eb'],
        borderWidth: 0
      }]
    };

    setChartData({
      subjectAnalysis,
      progressTrend,
      studyTime,
      studyEfficiency,
      classComparison,
      achievements,
      currentScore: 8.8,
      improvement: '+2.3',
      rank: 5,
      totalStudents: 35,
      studyHours: 19,
      completionRate: 92
    });
  }, []);

  return (
    <div style={{ 
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', 
      minHeight: '100vh', 
      padding: '20px', 
      fontFamily: 'system-ui, -apple-system, sans-serif' 
    }}>
      {/* Header */}
      <div style={{
        background: 'rgba(255,255,255,0.95)',
        borderRadius: '16px',
        padding: '24px',
        marginBottom: '24px',
        boxShadow: '0 8px 32px rgba(0,0,0,0.1)'
      }}>
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: '16px'
        }}>
          <div style={{ display: 'flex', alignItems: 'center', fontSize: '24px', fontWeight: 'bold', color: '#1f2937' }}>
            üìä B·∫£ng ƒêi·ªÅu Khi·ªÉn H·ªçc T·∫≠p
          </div>
          <div style={{ display: 'flex', alignItems: 'center', color: '#6b7280', fontSize: '14px' }}>
            <span>C·∫≠p nh·∫≠t: {new Date().toLocaleDateString('vi-VN')}</span>
          </div>
        </div>

        <div style={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          marginBottom: '20px',
          fontSize: '16px',
          flexWrap: 'wrap',
          gap: '16px'
        }}>
          <span style={{ fontWeight: '600' }}>
            üë®‚Äçüéì <strong>Kh·ªïng Th·ªã Ho√†i Ph∆∞∆°ng</strong> - MSSV: <strong>HS104832</strong> - L·ªõp: <strong>12A1</strong>
          </span>
        </div>

        {/* Th·ªëng k√™ t·ªïng quan */}
        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>
          <StatCard 
            title="ƒêi·ªÉm TB Hi·ªán T·∫°i"
            value={chartData?.currentScore || 0}
            subtitle="TƒÉng so v·ªõi th√°ng tr∆∞·ªõc"
            color="#10b981"
            icon="üìà"
          />
          <StatCard 
            title="M·ª©c C·∫£i Thi·ªán"
            value={chartData?.improvement || 0}
            subtitle="ƒêi·ªÉm trong 6 th√°ng"
            color="#3b82f6"
            icon="üéØ"
          />
          <StatCard 
            title="Th·ª© H·∫°ng L·ªõp"
            value={`${chartData?.rank || 0}/${chartData?.totalStudents || 0}`}
            subtitle="X·∫øp h·∫°ng hi·ªán t·∫°i"
            color="#8b5cf6"
            icon="üèÜ"
          />
          <StatCard 
            title="Gi·ªù H·ªçc/Tu·∫ßn"
            value={chartData?.studyHours || 0}
            subtitle="Th·ªùi gian t·ª± h·ªçc"
            color="#f59e0b"
            icon="‚è∞"
          />
          <StatCard 
            title="Ho√†n Th√†nh BTVN"
            value={`${chartData?.completionRate || 0}%`}
            subtitle="T·ª∑ l·ªá l√†m b√†i t·∫≠p"
            color="#ef4444"
            icon="‚úÖ"
          />
        </div>
      </div>

      {/* Bi·ªÉu ƒë·ªì chi ti·∫øt */}
      <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>
        {chartData?.progressTrend && (
          <ChartCard 
            title="üìà Xu H∆∞·ªõng Ti·∫øn B·ªô Theo Th√°ng" 
            chart={<Line data={chartData.progressTrend} options={{ maintainAspectRatio: false, responsive: true }} />}
            insight="Xu h∆∞·ªõng h·ªçc t·∫≠p t√≠ch c·ª±c v·ªõi s·ª± c·∫£i thi·ªán ƒë·ªÅu ƒë·∫∑n. ƒêi·ªÉm s·ªë tƒÉng 2.3 ƒëi·ªÉm trong 6 th√°ng, ƒë·∫∑c bi·ªát n·ªïi b·∫≠t ·ªü vi·ªác ho√†n th√†nh b√†i t·∫≠p v·ªÅ nh√†."
          />
        )}
        
        {chartData?.subjectAnalysis && (
          <ChartCard 
            title="üéØ Ph√¢n T√≠ch NƒÉng L·ª±c Theo Ch·ªß ƒê·ªÅ" 
            chart={<Radar data={chartData.subjectAnalysis} options={{ maintainAspectRatio: false, responsive: true }} />}
            insight="ƒêi·ªÉm m·∫°nh: Gi·∫£i t√≠ch (9.1) v√† ƒê·∫°i s·ªë (8.5). C·∫ßn c·∫£i thi·ªán: X√°c su·∫•t (6.8) v√† H√¨nh h·ªçc (7.2). ƒê·ªÅ xu·∫•t: TƒÉng c∆∞·ªùng luy·ªán t·∫≠p X√°c su·∫•t."
          />
        )}

        {chartData?.studyTime && (
          <ChartCard 
            title="üìÖ Ph√¢n B·ªï Th·ªùi Gian H·ªçc Trong Tu·∫ßn" 
            chart={<Bar data={chartData.studyTime} options={{ maintainAspectRatio: false, responsive: true }} />}
            insight="H·ªçc nhi·ªÅu nh·∫•t v√†o Ch·ªß nh·∫≠t (4h) v√† Th·ª© 5 (3.5h). Th·ª© 7 h·ªçc √≠t nh·∫•t (1.5h). ƒê·ªÅ xu·∫•t: C√¢n b·∫±ng th·ªùi gian h·ªçc ƒë·ªÅu h∆°n trong tu·∫ßn."
          />
        )}

        {chartData?.classComparison && (
          <ChartCard 
            title="üìä So S√°nh V·ªõi Trung B√¨nh L·ªõp" 
            chart={<Bar data={chartData.classComparison} options={{ maintainAspectRatio: false, responsive: true }} />}
            insight="V∆∞·ª£t tr·ªôi so v·ªõi l·ªõp ·ªü t·∫•t c·∫£ ti√™u ch√≠. BTVN ho√†n th√†nh 92% (l·ªõp 75%), ti·∫øn b·ªô 88% (l·ªõp 65%). Duy tr√¨ phong ƒë·ªô t·ªët!"
          />
        )}

        {chartData?.studyEfficiency && (
          <ChartCard 
            title="‚ö° Hi·ªáu Qu·∫£ T·∫≠p Trung Khi H·ªçc" 
            chart={<Doughnut data={chartData.studyEfficiency} options={{ maintainAspectRatio: false }} />}
            insight="T·∫≠p trung cao 45% th·ªùi gian h·ªçc. M·∫•t t·∫≠p trung 15% - m·ª©c ch·∫•p nh·∫≠n ƒë∆∞·ª£c. ƒê·ªÅ xu·∫•t: √Åp d·ª•ng k·ªπ thu·∫≠t Pomodoro ƒë·ªÉ tƒÉng hi·ªáu qu·∫£."
          />
        )}

        {chartData?.achievements && (
          <ChartCard 
            title="üéñÔ∏è T·ª∑ L·ªá ƒê·∫°t M·ª•c Ti√™u" 
            chart={<Doughnut data={chartData.achievements} options={{ maintainAspectRatio: false }} />}
            insight="ƒê√£ ho√†n th√†nh 75% m·ª•c ti√™u ƒë·ªÅ ra. C√≤n 25% m·ª•c ti√™u c·∫ßn n·ªó l·ª±c th√™m. T·∫≠p trung v√†o vi·ªác c·∫£i thi·ªán ƒëi·ªÉm X√°c su·∫•t v√† H√¨nh h·ªçc."
          />
        )}
      </div>

      {/* Khuy·∫øn ngh·ªã */}
      <div style={{
        background: 'rgba(255,255,255,0.95)',
        borderRadius: '16px',
        padding: '24px',
        marginTop: '24px',
        boxShadow: '0 8px 32px rgba(0,0,0,0.1)'
      }}>
        <h3 style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '16px', color: '#1f2937' }}>
          üí° Khuy·∫øn Ngh·ªã C·∫£i Thi·ªán
        </h3>
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '16px' }}>
          <div style={{ padding: '16px', backgroundColor: '#dbeafe', borderRadius: '8px', borderLeft: '4px solid #3b82f6' }}>
            <strong style={{ color: '#1e40af' }}>üìö H·ªçc t·∫≠p:</strong>
            <p style={{ margin: '8px 0 0 0', fontSize: '14px' }}>D√†nh th√™m 30 ph√∫t/ng√†y cho X√°c su·∫•t v√† H√¨nh h·ªçc. S·ª≠ d·ª•ng ph∆∞∆°ng ph√°p h·ªçc qua h√¨nh ·∫£nh v√† b√†i t·∫≠p th·ª±c h√†nh.</p>
          </div>
          <div style={{ padding: '16px', backgroundColor: '#dcfce7', borderRadius: '8px', borderLeft: '4px solid #16a34a' }}>
            <strong style={{ color: '#15803d' }}>‚è∞ Th·ªùi gian:</strong>
            <p style={{ margin: '8px 0 0 0', fontSize: '14px' }}>C√¢n b·∫±ng th·ªùi gian h·ªçc trong tu·∫ßn. TƒÉng th·ªùi gian h·ªçc Th·ª© 7 l√™n 2.5h ƒë·ªÉ ƒë·∫£m b·∫£o √¥n t·∫≠p cu·ªëi tu·∫ßn.</p>
          </div>
          <div style={{ padding: '16px', backgroundColor: '#fef3c7', borderRadius: '8px', borderLeft: '4px solid #d97706' }}>
            <strong style={{ color: '#92400e' }}>üéØ M·ª•c ti√™u:</strong>
            <p style={{ margin: '8px 0 0 0', fontSize: '14px' }}>M·ª•c ti√™u th√°ng t·ªõi: ƒê·∫°t 9.0 ƒëi·ªÉm TB, Top 3 trong l·ªõp, v√† 95% ho√†n th√†nh BTVN.</p>
          </div>
        </div>
      </div>
    </div>
  );
}

export default StudentStatistic;